services:
  express-messenger.blazor-web-app:
    container_name: ExpressMessenger.BlazorWebApp
    build:
      context: .
      dockerfile: WebApp/ExpressMessenger.BlazorWebApp/Dockerfile
    ports:
      - "5000:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      Apis__UsersManagement__Url: http://host.docker.internal:5700/api/users-management
      Apis__Chatting__Url: http://host.docker.internal:5700/api/chatting
    labels:
      com.jetbrains.rider.debug: "true"
    links:
      - express-messenger.gateway

  express-messenger.users-management:
    container_name: ExpressMessenger.UsersManagement
    build:
      context: .
      dockerfile: UsersManagement/ExpressMessenger.UsersManagement.Api/Dockerfile
    ports:
      - "5500:8080"
    environment:
      ConnectionStrings__Database: Host=express-messenger.postgres;Port=5432;Database=express-messenger.users-management;Username=postgres;Password=postgres;
      ASPNETCORE_ENVIRONMENT: Development
      Kafka__Host: kafka:9092
      Kafka__Username: admin
      Kafka__Password: admin-secret
    labels:
      com.jetbrains.rider.debug: "true"
    links:
      - express-messenger.postgres

  express-messenger.chatting:
    container_name: ExpressMessenger.Chatting
    build:
      context: .
      dockerfile: Chatting/ExpressMessenger.Chatting.Api/Dockerfile
    ports:
      - "5600:8080"
    environment:
      ConnectionStrings__Database: Host=express-messenger.postgres;Port=5432;Database=express-messenger.chatting;Username=postgres;Password=postgres;
      ASPNETCORE_ENVIRONMENT: Development
      Apis__UsersManagement__Url: http://host.docker.internal:5500
      Kafka__Host: kafka:9092
      Kafka__Username: admin
      Kafka__Password: admin-secret
    labels:
      com.jetbrains.rider.debug: "true"

  express-messenger.gateway:
    container_name: ExpressMessenger.Gateway
    build:
      context: .
      dockerfile: Gateway/ExpressMessenger.Gateway/Dockerfile
    ports:
      - "5700:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    labels:
      com.jetbrains.rider.debug: "true"

  express-messenger.postgres:
    image: postgres:17
    container_name: ExpressMessenger.Postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    container_name: ExpressMessenger.Zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf
    volumes:
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: ExpressMessenger.Kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf
    volumes:
      - kafka-data:/var/lib/kafka/data
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: ExpressMessenger.KafkaUI
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: express-messenger
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SASL_ENABLED: "true"
      KAFKA_CLUSTERS_0_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_SASL_USERNAME: admin
      KAFKA_CLUSTERS_0_SASL_PASSWORD: admin-secret
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: pass
    depends_on:
      - kafka

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
